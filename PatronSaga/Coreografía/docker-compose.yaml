version: "3"

services:
  order:
    build:
      context: .
      dockerfile: order/Dockerfile
    image: ms_order
    env_file: envvar.txt
    ports:
      - 90:3010
    environment:
      - PORT=3010
    restart: on-failure
    depends_on:
      - rabbitmq
      - mongo
    networks:
      - ms_network
  payment:
    build:
      context: .
      dockerfile: payment/Dockerfile
    image: ms_payment
    env_file: envvar.txt
    environment:
      - PORT=3020
    restart: on-failure
    depends_on:
      - rabbitmq
      - mongo
    networks:
      - ms_network
  store:
    build:
      context: .
      dockerfile: store/Dockerfile
    image: ms_store
    env_file: envvar.txt
    environment:
      - PORT=3030
    restart: on-failure
    depends_on:
      - rabbitmq
      - mongo
    networks:
      - ms_network
  delivery:
    build:
      context: .
      dockerfile: delivery/Dockerfile
    image: ms_delivery
    env_file: envvar.txt
    environment:
      - PORT=3040
    restart: on-failure
    depends_on:
      - rabbitmq
      - mongo
    networks:
      - ms_network
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:15672"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - ms_network
  mongo:
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=ElMund03sanch0
    ports:
      - 27017:27107
    networks:
      - ms_network
networks:
  ms_network:
